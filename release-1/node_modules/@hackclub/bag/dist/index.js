"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// ../node_modules/dotenv/package.json
var require_package = __commonJS({
  "../node_modules/dotenv/package.json"(exports2, module2) {
    module2.exports = {
      name: "dotenv",
      version: "16.3.1",
      description: "Loads environment variables from .env file",
      main: "lib/main.js",
      types: "lib/main.d.ts",
      exports: {
        ".": {
          types: "./lib/main.d.ts",
          require: "./lib/main.js",
          default: "./lib/main.js"
        },
        "./config": "./config.js",
        "./config.js": "./config.js",
        "./lib/env-options": "./lib/env-options.js",
        "./lib/env-options.js": "./lib/env-options.js",
        "./lib/cli-options": "./lib/cli-options.js",
        "./lib/cli-options.js": "./lib/cli-options.js",
        "./package.json": "./package.json"
      },
      scripts: {
        "dts-check": "tsc --project tests/types/tsconfig.json",
        lint: "standard",
        "lint-readme": "standard-markdown",
        pretest: "npm run lint && npm run dts-check",
        test: "tap tests/*.js --100 -Rspec",
        prerelease: "npm test",
        release: "standard-version"
      },
      repository: {
        type: "git",
        url: "git://github.com/motdotla/dotenv.git"
      },
      funding: "https://github.com/motdotla/dotenv?sponsor=1",
      keywords: [
        "dotenv",
        "env",
        ".env",
        "environment",
        "variables",
        "config",
        "settings"
      ],
      readmeFilename: "README.md",
      license: "BSD-2-Clause",
      devDependencies: {
        "@definitelytyped/dtslint": "^0.0.133",
        "@types/node": "^18.11.3",
        decache: "^4.6.1",
        sinon: "^14.0.1",
        standard: "^17.0.0",
        "standard-markdown": "^7.1.0",
        "standard-version": "^9.5.0",
        tap: "^16.3.0",
        tar: "^6.1.11",
        typescript: "^4.8.4"
      },
      engines: {
        node: ">=12"
      },
      browser: {
        fs: false
      }
    };
  }
});

// ../node_modules/dotenv/lib/main.js
var require_main = __commonJS({
  "../node_modules/dotenv/lib/main.js"(exports2, module2) {
    "use strict";
    var fs = require("fs");
    var path = require("path");
    var os = require("os");
    var crypto = require("crypto");
    var packageJson = require_package();
    var version = packageJson.version;
    var LINE = /(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;
    function parse(src) {
      const obj = {};
      let lines = src.toString();
      lines = lines.replace(/\r\n?/mg, "\n");
      let match;
      while ((match = LINE.exec(lines)) != null) {
        const key = match[1];
        let value = match[2] || "";
        value = value.trim();
        const maybeQuote = value[0];
        value = value.replace(/^(['"`])([\s\S]*)\1$/mg, "$2");
        if (maybeQuote === '"') {
          value = value.replace(/\\n/g, "\n");
          value = value.replace(/\\r/g, "\r");
        }
        obj[key] = value;
      }
      return obj;
    }
    function _parseVault(options) {
      const vaultPath = _vaultPath(options);
      const result = DotenvModule.configDotenv({ path: vaultPath });
      if (!result.parsed) {
        throw new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`);
      }
      const keys = _dotenvKey(options).split(",");
      const length = keys.length;
      let decrypted;
      for (let i = 0; i < length; i++) {
        try {
          const key = keys[i].trim();
          const attrs = _instructions(result, key);
          decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key);
          break;
        } catch (error) {
          if (i + 1 >= length) {
            throw error;
          }
        }
      }
      return DotenvModule.parse(decrypted);
    }
    function _log(message) {
      console.log(`[dotenv@${version}][INFO] ${message}`);
    }
    function _warn(message) {
      console.log(`[dotenv@${version}][WARN] ${message}`);
    }
    function _debug(message) {
      console.log(`[dotenv@${version}][DEBUG] ${message}`);
    }
    function _dotenvKey(options) {
      if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {
        return options.DOTENV_KEY;
      }
      if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {
        return process.env.DOTENV_KEY;
      }
      return "";
    }
    function _instructions(result, dotenvKey) {
      let uri;
      try {
        uri = new URL(dotenvKey);
      } catch (error) {
        if (error.code === "ERR_INVALID_URL") {
          throw new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development");
        }
        throw error;
      }
      const key = uri.password;
      if (!key) {
        throw new Error("INVALID_DOTENV_KEY: Missing key part");
      }
      const environment = uri.searchParams.get("environment");
      if (!environment) {
        throw new Error("INVALID_DOTENV_KEY: Missing environment part");
      }
      const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`;
      const ciphertext = result.parsed[environmentKey];
      if (!ciphertext) {
        throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`);
      }
      return { ciphertext, key };
    }
    function _vaultPath(options) {
      let dotenvPath = path.resolve(process.cwd(), ".env");
      if (options && options.path && options.path.length > 0) {
        dotenvPath = options.path;
      }
      return dotenvPath.endsWith(".vault") ? dotenvPath : `${dotenvPath}.vault`;
    }
    function _resolveHome(envPath) {
      return envPath[0] === "~" ? path.join(os.homedir(), envPath.slice(1)) : envPath;
    }
    function _configVault(options) {
      _log("Loading env from encrypted .env.vault");
      const parsed = DotenvModule._parseVault(options);
      let processEnv = process.env;
      if (options && options.processEnv != null) {
        processEnv = options.processEnv;
      }
      DotenvModule.populate(processEnv, parsed, options);
      return { parsed };
    }
    function configDotenv(options) {
      let dotenvPath = path.resolve(process.cwd(), ".env");
      let encoding = "utf8";
      const debug = Boolean(options && options.debug);
      if (options) {
        if (options.path != null) {
          dotenvPath = _resolveHome(options.path);
        }
        if (options.encoding != null) {
          encoding = options.encoding;
        }
      }
      try {
        const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }));
        let processEnv = process.env;
        if (options && options.processEnv != null) {
          processEnv = options.processEnv;
        }
        DotenvModule.populate(processEnv, parsed, options);
        return { parsed };
      } catch (e) {
        if (debug) {
          _debug(`Failed to load ${dotenvPath} ${e.message}`);
        }
        return { error: e };
      }
    }
    function config(options) {
      const vaultPath = _vaultPath(options);
      if (_dotenvKey(options).length === 0) {
        return DotenvModule.configDotenv(options);
      }
      if (!fs.existsSync(vaultPath)) {
        _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`);
        return DotenvModule.configDotenv(options);
      }
      return DotenvModule._configVault(options);
    }
    function decrypt(encrypted, keyStr) {
      const key = Buffer.from(keyStr.slice(-64), "hex");
      let ciphertext = Buffer.from(encrypted, "base64");
      const nonce = ciphertext.slice(0, 12);
      const authTag = ciphertext.slice(-16);
      ciphertext = ciphertext.slice(12, -16);
      try {
        const aesgcm = crypto.createDecipheriv("aes-256-gcm", key, nonce);
        aesgcm.setAuthTag(authTag);
        return `${aesgcm.update(ciphertext)}${aesgcm.final()}`;
      } catch (error) {
        const isRange = error instanceof RangeError;
        const invalidKeyLength = error.message === "Invalid key length";
        const decryptionFailed = error.message === "Unsupported state or unable to authenticate data";
        if (isRange || invalidKeyLength) {
          const msg = "INVALID_DOTENV_KEY: It must be 64 characters long (or more)";
          throw new Error(msg);
        } else if (decryptionFailed) {
          const msg = "DECRYPTION_FAILED: Please check your DOTENV_KEY";
          throw new Error(msg);
        } else {
          console.error("Error: ", error.code);
          console.error("Error: ", error.message);
          throw error;
        }
      }
    }
    function populate(processEnv, parsed, options = {}) {
      const debug = Boolean(options && options.debug);
      const override = Boolean(options && options.override);
      if (typeof parsed !== "object") {
        throw new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");
      }
      for (const key of Object.keys(parsed)) {
        if (Object.prototype.hasOwnProperty.call(processEnv, key)) {
          if (override === true) {
            processEnv[key] = parsed[key];
          }
          if (debug) {
            if (override === true) {
              _debug(`"${key}" is already defined and WAS overwritten`);
            } else {
              _debug(`"${key}" is already defined and was NOT overwritten`);
            }
          }
        } else {
          processEnv[key] = parsed[key];
        }
      }
    }
    var DotenvModule = {
      configDotenv,
      _configVault,
      _parseVault,
      config,
      decrypt,
      parse,
      populate
    };
    module2.exports.configDotenv = DotenvModule.configDotenv;
    module2.exports._configVault = DotenvModule._configVault;
    module2.exports._parseVault = DotenvModule._parseVault;
    module2.exports.config = DotenvModule.config;
    module2.exports.decrypt = DotenvModule.decrypt;
    module2.exports.parse = DotenvModule.parse;
    module2.exports.populate = DotenvModule.populate;
    module2.exports = DotenvModule;
  }
});

// ../node_modules/dotenv/lib/env-options.js
var require_env_options = __commonJS({
  "../node_modules/dotenv/lib/env-options.js"(exports2, module2) {
    "use strict";
    var options = {};
    if (process.env.DOTENV_CONFIG_ENCODING != null) {
      options.encoding = process.env.DOTENV_CONFIG_ENCODING;
    }
    if (process.env.DOTENV_CONFIG_PATH != null) {
      options.path = process.env.DOTENV_CONFIG_PATH;
    }
    if (process.env.DOTENV_CONFIG_DEBUG != null) {
      options.debug = process.env.DOTENV_CONFIG_DEBUG;
    }
    if (process.env.DOTENV_CONFIG_OVERRIDE != null) {
      options.override = process.env.DOTENV_CONFIG_OVERRIDE;
    }
    if (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {
      options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY;
    }
    module2.exports = options;
  }
});

// ../node_modules/dotenv/lib/cli-options.js
var require_cli_options = __commonJS({
  "../node_modules/dotenv/lib/cli-options.js"(exports2, module2) {
    "use strict";
    var re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;
    module2.exports = function optionMatcher(args) {
      return args.reduce(function(acc, cur) {
        const matches = cur.match(re);
        if (matches) {
          acc[matches[1]] = matches[2];
        }
        return acc;
      }, {});
    };
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  App: () => App2,
  Permissions: () => Permissions
});
module.exports = __toCommonJS(src_exports);

// gen/eliza_pb.ts
var import_protobuf = require("@bufbuild/protobuf");
var _App = class _App extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _App().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _App().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _App().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_App, a, b);
  }
};
_App.runtime = import_protobuf.proto3;
_App.typeName = "connectrpc.eliza.v1.App";
_App.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "id", kind: "scalar", T: 5, opt: true },
  { no: 2, name: "name", kind: "scalar", T: 9, opt: true },
  { no: 3, name: "description", kind: "scalar", T: 9, opt: true },
  { no: 4, name: "permissions", kind: "scalar", T: 9, opt: true },
  { no: 5, name: "public", kind: "scalar", T: 8, opt: true },
  { no: 6, name: "metadata", kind: "scalar", T: 9, opt: true }
]);
var App = _App;
var _Item = class _Item extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Item().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Item().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Item().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_Item, a, b);
  }
};
_Item.runtime = import_protobuf.proto3;
_Item.typeName = "connectrpc.eliza.v1.Item";
_Item.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "name", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "image", kind: "scalar", T: 9, opt: true },
  { no: 3, name: "description", kind: "scalar", T: 9, opt: true },
  { no: 4, name: "reaction", kind: "scalar", T: 9, opt: true },
  { no: 5, name: "commodity", kind: "scalar", T: 8, opt: true },
  { no: 6, name: "tradable", kind: "scalar", T: 8, opt: true },
  { no: 7, name: "public", kind: "scalar", T: 8, opt: true },
  { no: 8, name: "metadata", kind: "scalar", T: 9, opt: true }
]);
var Item = _Item;
var _Identity = class _Identity extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Instance inventory = 2;
     */
    this.inventory = [];
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Identity().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Identity().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Identity().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_Identity, a, b);
  }
};
_Identity.runtime = import_protobuf.proto3;
_Identity.typeName = "connectrpc.eliza.v1.Identity";
_Identity.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "slack", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "inventory", kind: "message", T: Instance, repeated: true },
  { no: 3, name: "metadata", kind: "scalar", T: 9, opt: true }
]);
var Identity = _Identity;
var _Instance = class _Instance extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Instance().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Instance().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Instance().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_Instance, a, b);
  }
};
_Instance.runtime = import_protobuf.proto3;
_Instance.typeName = "connectrpc.eliza.v1.Instance";
_Instance.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "id", kind: "scalar", T: 5, opt: true },
  { no: 2, name: "itemId", kind: "scalar", T: 9, opt: true },
  { no: 3, name: "identityId", kind: "scalar", T: 9, opt: true },
  { no: 4, name: "quantity", kind: "scalar", T: 5, opt: true },
  { no: 5, name: "item", kind: "message", T: Item, opt: true }
]);
var Instance = _Instance;
var _Trade = class _Trade extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Instance initiatorTrades = 4;
     */
    this.initiatorTrades = [];
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Instance receiverTrades = 5;
     */
    this.receiverTrades = [];
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Trade().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Trade().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Trade().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_Trade, a, b);
  }
};
_Trade.runtime = import_protobuf.proto3;
_Trade.typeName = "connectrpc.eliza.v1.Trade";
_Trade.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "id", kind: "scalar", T: 5, opt: true },
  { no: 2, name: "initiatorIdentityId", kind: "scalar", T: 9, opt: true },
  { no: 3, name: "receiverIdentityId", kind: "scalar", T: 9, opt: true },
  { no: 4, name: "initiatorTrades", kind: "message", T: Instance, repeated: true },
  { no: 5, name: "receiverTrades", kind: "message", T: Instance, repeated: true },
  { no: 6, name: "public", kind: "scalar", T: 8, opt: true },
  { no: 7, name: "closed", kind: "scalar", T: 8, opt: true }
]);
var Trade = _Trade;
var _Recipe = class _Recipe extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 id = 1;
     */
    this.id = 0;
    /**
     * @generated from field: repeated string inputIds = 2;
     */
    this.inputIds = [];
    /**
     * @generated from field: repeated string outputIds = 3;
     */
    this.outputIds = [];
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Item inputs = 4;
     */
    this.inputs = [];
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Item outputs = 5;
     */
    this.outputs = [];
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Recipe().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Recipe().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Recipe().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_Recipe, a, b);
  }
};
_Recipe.runtime = import_protobuf.proto3;
_Recipe.typeName = "connectrpc.eliza.v1.Recipe";
_Recipe.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "id",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  { no: 2, name: "inputIds", kind: "scalar", T: 9, repeated: true },
  { no: 3, name: "outputIds", kind: "scalar", T: 9, repeated: true },
  { no: 4, name: "inputs", kind: "message", T: Item, repeated: true },
  { no: 5, name: "outputs", kind: "message", T: Item, repeated: true }
]);
var Recipe = _Recipe;
var _CreateInstancesRequest = class _CreateInstancesRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Item items = 3;
     */
    this.items = [];
    /**
     * @generated from field: string identityId = 4;
     */
    this.identityId = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateInstancesRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateInstancesRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateInstancesRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateInstancesRequest, a, b);
  }
};
_CreateInstancesRequest.runtime = import_protobuf.proto3;
_CreateInstancesRequest.typeName = "connectrpc.eliza.v1.CreateInstancesRequest";
_CreateInstancesRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 3, name: "items", kind: "message", T: Item, repeated: true },
  {
    no: 4,
    name: "identityId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 5, name: "note", kind: "scalar", T: 9, opt: true }
]);
var CreateInstancesRequest = _CreateInstancesRequest;
var _CreateInstancesResponse = class _CreateInstancesResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateInstancesResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateInstancesResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateInstancesResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateInstancesResponse, a, b);
  }
};
_CreateInstancesResponse.runtime = import_protobuf.proto3;
_CreateInstancesResponse.typeName = "connectrpc.eliza.v1.CreateInstancesResponse";
_CreateInstancesResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "instance", kind: "message", T: Instance, opt: true }
]);
var CreateInstancesResponse = _CreateInstancesResponse;
var _CreateInstanceRequest = class _CreateInstanceRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string itemId = 3;
     */
    this.itemId = "";
    /**
     * @generated from field: string identityId = 4;
     */
    this.identityId = "";
    /**
     * @generated from field: int32 quantity = 5;
     */
    this.quantity = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateInstanceRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateInstanceRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateInstanceRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateInstanceRequest, a, b);
  }
};
_CreateInstanceRequest.runtime = import_protobuf.proto3;
_CreateInstanceRequest.typeName = "connectrpc.eliza.v1.CreateInstanceRequest";
_CreateInstanceRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "itemId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 4,
    name: "identityId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 5,
    name: "quantity",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  { no: 6, name: "metadata", kind: "scalar", T: 9, opt: true },
  { no: 7, name: "public", kind: "scalar", T: 8, opt: true },
  { no: 8, name: "note", kind: "scalar", T: 9, opt: true }
]);
var CreateInstanceRequest = _CreateInstanceRequest;
var _CreateInstanceResponse = class _CreateInstanceResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateInstanceResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateInstanceResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateInstanceResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateInstanceResponse, a, b);
  }
};
_CreateInstanceResponse.runtime = import_protobuf.proto3;
_CreateInstanceResponse.typeName = "connectrpc.eliza.v1.CreateInstanceResponse";
_CreateInstanceResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "instance", kind: "message", T: Instance, opt: true }
]);
var CreateInstanceResponse = _CreateInstanceResponse;
var _CreateAppRequest = class _CreateAppRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string name = 3;
     */
    this.name = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateAppRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateAppRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateAppRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateAppRequest, a, b);
  }
};
_CreateAppRequest.runtime = import_protobuf.proto3;
_CreateAppRequest.typeName = "connectrpc.eliza.v1.CreateAppRequest";
_CreateAppRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "name",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 4, name: "description", kind: "scalar", T: 9, opt: true },
  { no: 5, name: "permissions", kind: "scalar", T: 5, opt: true },
  { no: 6, name: "public", kind: "scalar", T: 8, opt: true },
  { no: 7, name: "metadata", kind: "scalar", T: 9, opt: true }
]);
var CreateAppRequest = _CreateAppRequest;
var _CreateAppResponse = class _CreateAppResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateAppResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateAppResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateAppResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateAppResponse, a, b);
  }
};
_CreateAppResponse.runtime = import_protobuf.proto3;
_CreateAppResponse.typeName = "connectrpc.eliza.v1.CreateAppResponse";
_CreateAppResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "app", kind: "message", T: App, opt: true },
  { no: 3, name: "key", kind: "scalar", T: 9, opt: true }
]);
var CreateAppResponse = _CreateAppResponse;
var _CreateItemRequest = class _CreateItemRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateItemRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateItemRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateItemRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateItemRequest, a, b);
  }
};
_CreateItemRequest.runtime = import_protobuf.proto3;
_CreateItemRequest.typeName = "connectrpc.eliza.v1.CreateItemRequest";
_CreateItemRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 3, name: "item", kind: "message", T: Item }
]);
var CreateItemRequest = _CreateItemRequest;
var _CreateItemResponse = class _CreateItemResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateItemResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateItemResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateItemResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateItemResponse, a, b);
  }
};
_CreateItemResponse.runtime = import_protobuf.proto3;
_CreateItemResponse.typeName = "connectrpc.eliza.v1.CreateItemResponse";
_CreateItemResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "item", kind: "message", T: Item, opt: true }
]);
var CreateItemResponse = _CreateItemResponse;
var _CreateRecipeRequest = class _CreateRecipeRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: repeated string inputs = 3;
     */
    this.inputs = [];
    /**
     * @generated from field: repeated string outputs = 4;
     */
    this.outputs = [];
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateRecipeRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateRecipeRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateRecipeRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateRecipeRequest, a, b);
  }
};
_CreateRecipeRequest.runtime = import_protobuf.proto3;
_CreateRecipeRequest.typeName = "connectrpc.eliza.v1.CreateRecipeRequest";
_CreateRecipeRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 3, name: "inputs", kind: "scalar", T: 9, repeated: true },
  { no: 4, name: "outputs", kind: "scalar", T: 9, repeated: true }
]);
var CreateRecipeRequest = _CreateRecipeRequest;
var _CreateRecipeResponse = class _CreateRecipeResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateRecipeResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateRecipeResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateRecipeResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateRecipeResponse, a, b);
  }
};
_CreateRecipeResponse.runtime = import_protobuf.proto3;
_CreateRecipeResponse.typeName = "connectrpc.eliza.v1.CreateRecipeResponse";
_CreateRecipeResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "recipe", kind: "message", T: Recipe, opt: true }
]);
var CreateRecipeResponse = _CreateRecipeResponse;
var _CreateTradeRequest = class _CreateTradeRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string initiator = 3;
     */
    this.initiator = "";
    /**
     * @generated from field: string receiver = 4;
     */
    this.receiver = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateTradeRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateTradeRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateTradeRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateTradeRequest, a, b);
  }
};
_CreateTradeRequest.runtime = import_protobuf.proto3;
_CreateTradeRequest.typeName = "connectrpc.eliza.v1.CreateTradeRequest";
_CreateTradeRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "initiator",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 4,
    name: "receiver",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 5, name: "public", kind: "scalar", T: 8, opt: true }
]);
var CreateTradeRequest = _CreateTradeRequest;
var _CreateTradeResponse = class _CreateTradeResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateTradeResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateTradeResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateTradeResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CreateTradeResponse, a, b);
  }
};
_CreateTradeResponse.runtime = import_protobuf.proto3;
_CreateTradeResponse.typeName = "connectrpc.eliza.v1.CreateTradeResponse";
_CreateTradeResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "trade", kind: "message", T: Trade, opt: true }
]);
var CreateTradeResponse = _CreateTradeResponse;
var _ReadIdentityRequest = class _ReadIdentityRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string identityId = 3;
     */
    this.identityId = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadIdentityRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadIdentityRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadIdentityRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadIdentityRequest, a, b);
  }
};
_ReadIdentityRequest.runtime = import_protobuf.proto3;
_ReadIdentityRequest.typeName = "connectrpc.eliza.v1.ReadIdentityRequest";
_ReadIdentityRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "identityId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var ReadIdentityRequest = _ReadIdentityRequest;
var _ReadIdentityResponse = class _ReadIdentityResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadIdentityResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadIdentityResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadIdentityResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadIdentityResponse, a, b);
  }
};
_ReadIdentityResponse.runtime = import_protobuf.proto3;
_ReadIdentityResponse.typeName = "connectrpc.eliza.v1.ReadIdentityResponse";
_ReadIdentityResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "identity", kind: "message", T: Identity, opt: true }
]);
var ReadIdentityResponse = _ReadIdentityResponse;
var _ReadInventoryRequest = class _ReadInventoryRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string identityId = 3;
     */
    this.identityId = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadInventoryRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadInventoryRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadInventoryRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadInventoryRequest, a, b);
  }
};
_ReadInventoryRequest.runtime = import_protobuf.proto3;
_ReadInventoryRequest.typeName = "connectrpc.eliza.v1.ReadInventoryRequest";
_ReadInventoryRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "identityId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var ReadInventoryRequest = _ReadInventoryRequest;
var _ReadInventoryResponse = class _ReadInventoryResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Instance inventory = 2;
     */
    this.inventory = [];
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadInventoryResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadInventoryResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadInventoryResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadInventoryResponse, a, b);
  }
};
_ReadInventoryResponse.runtime = import_protobuf.proto3;
_ReadInventoryResponse.typeName = "connectrpc.eliza.v1.ReadInventoryResponse";
_ReadInventoryResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "inventory", kind: "message", T: Instance, repeated: true }
]);
var ReadInventoryResponse = _ReadInventoryResponse;
var _ReadItemRequest = class _ReadItemRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string query = 3;
     */
    this.query = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadItemRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadItemRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadItemRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadItemRequest, a, b);
  }
};
_ReadItemRequest.runtime = import_protobuf.proto3;
_ReadItemRequest.typeName = "connectrpc.eliza.v1.ReadItemRequest";
_ReadItemRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "query",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var ReadItemRequest = _ReadItemRequest;
var _ReadItemResponse = class _ReadItemResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Item items = 2;
     */
    this.items = [];
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadItemResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadItemResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadItemResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadItemResponse, a, b);
  }
};
_ReadItemResponse.runtime = import_protobuf.proto3;
_ReadItemResponse.typeName = "connectrpc.eliza.v1.ReadItemResponse";
_ReadItemResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "items", kind: "message", T: Item, repeated: true }
]);
var ReadItemResponse = _ReadItemResponse;
var _ReadInstanceRequest = class _ReadInstanceRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 instanceId = 3;
     */
    this.instanceId = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadInstanceRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadInstanceRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadInstanceRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadInstanceRequest, a, b);
  }
};
_ReadInstanceRequest.runtime = import_protobuf.proto3;
_ReadInstanceRequest.typeName = "connectrpc.eliza.v1.ReadInstanceRequest";
_ReadInstanceRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "instanceId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  }
]);
var ReadInstanceRequest = _ReadInstanceRequest;
var _ReadInstanceResponse = class _ReadInstanceResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadInstanceResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadInstanceResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadInstanceResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadInstanceResponse, a, b);
  }
};
_ReadInstanceResponse.runtime = import_protobuf.proto3;
_ReadInstanceResponse.typeName = "connectrpc.eliza.v1.ReadInstanceResponse";
_ReadInstanceResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "instance", kind: "message", T: Instance, opt: true }
]);
var ReadInstanceResponse = _ReadInstanceResponse;
var _ReadAppRequest = class _ReadAppRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 optAppId = 3;
     */
    this.optAppId = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadAppRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadAppRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadAppRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadAppRequest, a, b);
  }
};
_ReadAppRequest.runtime = import_protobuf.proto3;
_ReadAppRequest.typeName = "connectrpc.eliza.v1.ReadAppRequest";
_ReadAppRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "optAppId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  }
]);
var ReadAppRequest = _ReadAppRequest;
var _ReadAppResponse = class _ReadAppResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadAppResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadAppResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadAppResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadAppResponse, a, b);
  }
};
_ReadAppResponse.runtime = import_protobuf.proto3;
_ReadAppResponse.typeName = "connectrpc.eliza.v1.ReadAppResponse";
_ReadAppResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "app", kind: "message", T: App, opt: true }
]);
var ReadAppResponse = _ReadAppResponse;
var _ReadTradeRequest = class _ReadTradeRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 tradeId = 3;
     */
    this.tradeId = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadTradeRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadTradeRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadTradeRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadTradeRequest, a, b);
  }
};
_ReadTradeRequest.runtime = import_protobuf.proto3;
_ReadTradeRequest.typeName = "connectrpc.eliza.v1.ReadTradeRequest";
_ReadTradeRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "tradeId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  }
]);
var ReadTradeRequest = _ReadTradeRequest;
var _ReadTradeResponse = class _ReadTradeResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadTradeResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadTradeResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadTradeResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadTradeResponse, a, b);
  }
};
_ReadTradeResponse.runtime = import_protobuf.proto3;
_ReadTradeResponse.typeName = "connectrpc.eliza.v1.ReadTradeResponse";
_ReadTradeResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "trade", kind: "message", T: Trade, opt: true }
]);
var ReadTradeResponse = _ReadTradeResponse;
var _ReadRecipeRequest = class _ReadRecipeRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 recipeId = 3;
     */
    this.recipeId = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadRecipeRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadRecipeRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadRecipeRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadRecipeRequest, a, b);
  }
};
_ReadRecipeRequest.runtime = import_protobuf.proto3;
_ReadRecipeRequest.typeName = "connectrpc.eliza.v1.ReadRecipeRequest";
_ReadRecipeRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "recipeId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  }
]);
var ReadRecipeRequest = _ReadRecipeRequest;
var _ReadRecipeResponse = class _ReadRecipeResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ReadRecipeResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ReadRecipeResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ReadRecipeResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_ReadRecipeResponse, a, b);
  }
};
_ReadRecipeResponse.runtime = import_protobuf.proto3;
_ReadRecipeResponse.typeName = "connectrpc.eliza.v1.ReadRecipeResponse";
_ReadRecipeResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "recipe", kind: "message", T: Recipe, opt: true }
]);
var ReadRecipeResponse = _ReadRecipeResponse;
var _UpdateIdentityMetadataRequest = class _UpdateIdentityMetadataRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string identityId = 3;
     */
    this.identityId = "";
    /**
     * @generated from field: string metadata = 4;
     */
    this.metadata = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateIdentityMetadataRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateIdentityMetadataRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateIdentityMetadataRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateIdentityMetadataRequest, a, b);
  }
};
_UpdateIdentityMetadataRequest.runtime = import_protobuf.proto3;
_UpdateIdentityMetadataRequest.typeName = "connectrpc.eliza.v1.UpdateIdentityMetadataRequest";
_UpdateIdentityMetadataRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "identityId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 4,
    name: "metadata",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var UpdateIdentityMetadataRequest = _UpdateIdentityMetadataRequest;
var _UpdateIdentityMetadataResponse = class _UpdateIdentityMetadataResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateIdentityMetadataResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateIdentityMetadataResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateIdentityMetadataResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateIdentityMetadataResponse, a, b);
  }
};
_UpdateIdentityMetadataResponse.runtime = import_protobuf.proto3;
_UpdateIdentityMetadataResponse.typeName = "connectrpc.eliza.v1.UpdateIdentityMetadataResponse";
_UpdateIdentityMetadataResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "identity", kind: "message", T: Identity, opt: true }
]);
var UpdateIdentityMetadataResponse = _UpdateIdentityMetadataResponse;
var _UpdateInstanceRequest = class _UpdateInstanceRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 instanceId = 3;
     */
    this.instanceId = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateInstanceRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateInstanceRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateInstanceRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateInstanceRequest, a, b);
  }
};
_UpdateInstanceRequest.runtime = import_protobuf.proto3;
_UpdateInstanceRequest.typeName = "connectrpc.eliza.v1.UpdateInstanceRequest";
_UpdateInstanceRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "instanceId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  { no: 4, name: "new", kind: "message", T: Instance },
  { no: 5, name: "note", kind: "scalar", T: 9, opt: true }
]);
var UpdateInstanceRequest = _UpdateInstanceRequest;
var _UpdateInstanceResponse = class _UpdateInstanceResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateInstanceResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateInstanceResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateInstanceResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateInstanceResponse, a, b);
  }
};
_UpdateInstanceResponse.runtime = import_protobuf.proto3;
_UpdateInstanceResponse.typeName = "connectrpc.eliza.v1.UpdateInstanceResponse";
_UpdateInstanceResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "instance", kind: "message", T: Instance, opt: true }
]);
var UpdateInstanceResponse = _UpdateInstanceResponse;
var _UpdateItemRequest = class _UpdateItemRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string itemId = 3;
     */
    this.itemId = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateItemRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateItemRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateItemRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateItemRequest, a, b);
  }
};
_UpdateItemRequest.runtime = import_protobuf.proto3;
_UpdateItemRequest.typeName = "connectrpc.eliza.v1.UpdateItemRequest";
_UpdateItemRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "itemId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 4, name: "new", kind: "message", T: Item }
]);
var UpdateItemRequest = _UpdateItemRequest;
var _UpdateItemResponse = class _UpdateItemResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateItemResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateItemResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateItemResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateItemResponse, a, b);
  }
};
_UpdateItemResponse.runtime = import_protobuf.proto3;
_UpdateItemResponse.typeName = "connectrpc.eliza.v1.UpdateItemResponse";
_UpdateItemResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "item", kind: "message", T: Item, opt: true }
]);
var UpdateItemResponse = _UpdateItemResponse;
var _UpdateAppRequest = class _UpdateAppRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateAppRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateAppRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateAppRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateAppRequest, a, b);
  }
};
_UpdateAppRequest.runtime = import_protobuf.proto3;
_UpdateAppRequest.typeName = "connectrpc.eliza.v1.UpdateAppRequest";
_UpdateAppRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 3, name: "optAppId", kind: "scalar", T: 5, opt: true },
  { no: 4, name: "new", kind: "message", T: App }
]);
var UpdateAppRequest = _UpdateAppRequest;
var _UpdateAppResponse = class _UpdateAppResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateAppResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateAppResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateAppResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateAppResponse, a, b);
  }
};
_UpdateAppResponse.runtime = import_protobuf.proto3;
_UpdateAppResponse.typeName = "connectrpc.eliza.v1.UpdateAppResponse";
_UpdateAppResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "app", kind: "message", T: App, opt: true }
]);
var UpdateAppResponse = _UpdateAppResponse;
var _UpdateTradeRequest = class _UpdateTradeRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 tradeId = 3;
     */
    this.tradeId = 0;
    /**
     * @generated from field: string identityId = 4;
     */
    this.identityId = "";
    /**
     * @generated from field: repeated connectrpc.eliza.v1.Instance add = 5;
     */
    this.add = [];
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateTradeRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateTradeRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateTradeRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateTradeRequest, a, b);
  }
};
_UpdateTradeRequest.runtime = import_protobuf.proto3;
_UpdateTradeRequest.typeName = "connectrpc.eliza.v1.UpdateTradeRequest";
_UpdateTradeRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "tradeId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 4,
    name: "identityId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 5, name: "add", kind: "message", T: Instance, repeated: true }
]);
var UpdateTradeRequest = _UpdateTradeRequest;
var _UpdateTradeResponse = class _UpdateTradeResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateTradeResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateTradeResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateTradeResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateTradeResponse, a, b);
  }
};
_UpdateTradeResponse.runtime = import_protobuf.proto3;
_UpdateTradeResponse.typeName = "connectrpc.eliza.v1.UpdateTradeResponse";
_UpdateTradeResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "trade", kind: "message", T: Trade, opt: true }
]);
var UpdateTradeResponse = _UpdateTradeResponse;
var _UpdateRecipeRequest = class _UpdateRecipeRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: string recipeId = 3;
     */
    this.recipeId = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateRecipeRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateRecipeRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateRecipeRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateRecipeRequest, a, b);
  }
};
_UpdateRecipeRequest.runtime = import_protobuf.proto3;
_UpdateRecipeRequest.typeName = "connectrpc.eliza.v1.UpdateRecipeRequest";
_UpdateRecipeRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "recipeId",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  { no: 4, name: "new", kind: "message", T: Recipe }
]);
var UpdateRecipeRequest = _UpdateRecipeRequest;
var _UpdateRecipeResponse = class _UpdateRecipeResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _UpdateRecipeResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _UpdateRecipeResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _UpdateRecipeResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_UpdateRecipeResponse, a, b);
  }
};
_UpdateRecipeResponse.runtime = import_protobuf.proto3;
_UpdateRecipeResponse.typeName = "connectrpc.eliza.v1.UpdateRecipeResponse";
_UpdateRecipeResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "recipe", kind: "message", T: Recipe, opt: true }
]);
var UpdateRecipeResponse = _UpdateRecipeResponse;
var _DeleteAppRequest = class _DeleteAppRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 deleteAppId = 3;
     */
    this.deleteAppId = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DeleteAppRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DeleteAppRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DeleteAppRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_DeleteAppRequest, a, b);
  }
};
_DeleteAppRequest.runtime = import_protobuf.proto3;
_DeleteAppRequest.typeName = "connectrpc.eliza.v1.DeleteAppRequest";
_DeleteAppRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "deleteAppId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  }
]);
var DeleteAppRequest = _DeleteAppRequest;
var _DeleteAppResponse = class _DeleteAppResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DeleteAppResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DeleteAppResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DeleteAppResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_DeleteAppResponse, a, b);
  }
};
_DeleteAppResponse.runtime = import_protobuf.proto3;
_DeleteAppResponse.typeName = "connectrpc.eliza.v1.DeleteAppResponse";
_DeleteAppResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "deletedApp", kind: "message", T: App, opt: true }
]);
var DeleteAppResponse = _DeleteAppResponse;
var _DeleteInstanceRequest = class _DeleteInstanceRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 instanceId = 3;
     */
    this.instanceId = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DeleteInstanceRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DeleteInstanceRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DeleteInstanceRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_DeleteInstanceRequest, a, b);
  }
};
_DeleteInstanceRequest.runtime = import_protobuf.proto3;
_DeleteInstanceRequest.typeName = "connectrpc.eliza.v1.DeleteInstanceRequest";
_DeleteInstanceRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "instanceId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  }
]);
var DeleteInstanceRequest = _DeleteInstanceRequest;
var _DeleteInstanceResponse = class _DeleteInstanceResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DeleteInstanceResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DeleteInstanceResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DeleteInstanceResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_DeleteInstanceResponse, a, b);
  }
};
_DeleteInstanceResponse.runtime = import_protobuf.proto3;
_DeleteInstanceResponse.typeName = "connectrpc.eliza.v1.DeleteInstanceResponse";
_DeleteInstanceResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "deletedInstance", kind: "message", T: Instance, opt: true }
]);
var DeleteInstanceResponse = _DeleteInstanceResponse;
var _CloseTradeRequest = class _CloseTradeRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    /**
     * @generated from field: int32 tradeId = 3;
     */
    this.tradeId = 0;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CloseTradeRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CloseTradeRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CloseTradeRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CloseTradeRequest, a, b);
  }
};
_CloseTradeRequest.runtime = import_protobuf.proto3;
_CloseTradeRequest.typeName = "connectrpc.eliza.v1.CloseTradeRequest";
_CloseTradeRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  },
  {
    no: 3,
    name: "tradeId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  }
]);
var CloseTradeRequest = _CloseTradeRequest;
var _CloseTradeResponse = class _CloseTradeResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CloseTradeResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CloseTradeResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CloseTradeResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_CloseTradeResponse, a, b);
  }
};
_CloseTradeResponse.runtime = import_protobuf.proto3;
_CloseTradeResponse.typeName = "connectrpc.eliza.v1.CloseTradeResponse";
_CloseTradeResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  { no: 1, name: "response", kind: "scalar", T: 9, opt: true },
  { no: 2, name: "trade", kind: "message", T: Trade, opt: true },
  { no: 3, name: "initiator", kind: "message", T: Identity, opt: true },
  { no: 4, name: "receiver", kind: "message", T: Identity, opt: true }
]);
var CloseTradeResponse = _CloseTradeResponse;
var _VerifyKeyRequest = class _VerifyKeyRequest extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: int32 appId = 1;
     */
    this.appId = 0;
    /**
     * @generated from field: string key = 2;
     */
    this.key = "";
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _VerifyKeyRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _VerifyKeyRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _VerifyKeyRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_VerifyKeyRequest, a, b);
  }
};
_VerifyKeyRequest.runtime = import_protobuf.proto3;
_VerifyKeyRequest.typeName = "connectrpc.eliza.v1.VerifyKeyRequest";
_VerifyKeyRequest.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "appId",
    kind: "scalar",
    T: 5
    /* ScalarType.INT32 */
  },
  {
    no: 2,
    name: "key",
    kind: "scalar",
    T: 9
    /* ScalarType.STRING */
  }
]);
var VerifyKeyRequest = _VerifyKeyRequest;
var _VerifyKeyResponse = class _VerifyKeyResponse extends import_protobuf.Message {
  constructor(data) {
    super();
    /**
     * @generated from field: bool valid = 1;
     */
    this.valid = false;
    import_protobuf.proto3.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _VerifyKeyResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _VerifyKeyResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _VerifyKeyResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return import_protobuf.proto3.util.equals(_VerifyKeyResponse, a, b);
  }
};
_VerifyKeyResponse.runtime = import_protobuf.proto3;
_VerifyKeyResponse.typeName = "connectrpc.eliza.v1.VerifyKeyResponse";
_VerifyKeyResponse.fields = import_protobuf.proto3.util.newFieldList(() => [
  {
    no: 1,
    name: "valid",
    kind: "scalar",
    T: 8
    /* ScalarType.BOOL */
  }
]);
var VerifyKeyResponse = _VerifyKeyResponse;

// gen/eliza_connect.ts
var import_protobuf2 = require("@bufbuild/protobuf");
var ElizaService = {
  typeName: "connectrpc.eliza.v1.ElizaService",
  methods: {
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateApp
     */
    createApp: {
      name: "CreateApp",
      I: CreateAppRequest,
      O: CreateAppResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateInstances
     */
    createInstances: {
      name: "CreateInstances",
      I: CreateInstancesRequest,
      O: CreateInstancesResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateInstance
     */
    createInstance: {
      name: "CreateInstance",
      I: CreateInstanceRequest,
      O: CreateInstanceResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateItem
     */
    createItem: {
      name: "CreateItem",
      I: CreateItemRequest,
      O: CreateItemResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateRecipe
     */
    createRecipe: {
      name: "CreateRecipe",
      I: CreateRecipeRequest,
      O: CreateRecipeResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateTrade
     */
    createTrade: {
      name: "CreateTrade",
      I: CreateTradeRequest,
      O: CreateTradeResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadIdentity
     */
    readIdentity: {
      name: "ReadIdentity",
      I: ReadIdentityRequest,
      O: ReadIdentityResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadInventory
     */
    readInventory: {
      name: "ReadInventory",
      I: ReadInventoryRequest,
      O: ReadInventoryResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadItem
     */
    readItem: {
      name: "ReadItem",
      I: ReadItemRequest,
      O: ReadItemResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadInstance
     */
    readInstance: {
      name: "ReadInstance",
      I: ReadInstanceRequest,
      O: ReadInstanceResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadApp
     */
    readApp: {
      name: "ReadApp",
      I: ReadAppRequest,
      O: ReadAppResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadTrade
     */
    readTrade: {
      name: "ReadTrade",
      I: ReadTradeRequest,
      O: ReadTradeResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadRecipe
     */
    readRecipe: {
      name: "ReadRecipe",
      I: ReadRecipeRequest,
      O: ReadRecipeResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateIdentityMetadata
     */
    updateIdentityMetadata: {
      name: "UpdateIdentityMetadata",
      I: UpdateIdentityMetadataRequest,
      O: UpdateIdentityMetadataResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateInstance
     */
    updateInstance: {
      name: "UpdateInstance",
      I: UpdateInstanceRequest,
      O: UpdateInstanceResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateItem
     */
    updateItem: {
      name: "UpdateItem",
      I: UpdateItemRequest,
      O: UpdateItemResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateApp
     */
    updateApp: {
      name: "UpdateApp",
      I: UpdateAppRequest,
      O: UpdateAppResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateTrade
     */
    updateTrade: {
      name: "UpdateTrade",
      I: UpdateTradeRequest,
      O: UpdateTradeResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateRecipe
     */
    updateRecipe: {
      name: "UpdateRecipe",
      I: UpdateRecipeRequest,
      O: UpdateRecipeResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.DeleteApp
     */
    deleteApp: {
      name: "DeleteApp",
      I: DeleteAppRequest,
      O: DeleteAppResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.DeleteInstance
     */
    deleteInstance: {
      name: "DeleteInstance",
      I: DeleteInstanceRequest,
      O: DeleteInstanceResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.CloseTrade
     */
    closeTrade: {
      name: "CloseTrade",
      I: CloseTradeRequest,
      O: CloseTradeResponse,
      kind: import_protobuf2.MethodKind.Unary
    },
    /**
     * @generated from rpc connectrpc.eliza.v1.ElizaService.VerifyKey
     */
    verifyKey: {
      name: "VerifyKey",
      I: VerifyKeyRequest,
      O: VerifyKeyResponse,
      kind: import_protobuf2.MethodKind.Unary
    }
  }
};

// src/index.ts
var import_connect = require("@connectrpc/connect");
var import_connect_node = require("@connectrpc/connect-node");

// ../node_modules/dotenv/config.js
(function() {
  require_main().config(
    Object.assign(
      {},
      require_env_options(),
      require_cli_options()(process.argv)
    )
  );
})();

// src/index.ts
var Permissions = {
  ADMIN: 4,
  WRITE: 3,
  WRITE_SPECIFIC: 2,
  READ_PRIVATE: 1,
  READ: 0
};
var App2 = class _App2 {
  constructor(client, appId, key) {
    this.client = client;
    this.request = { appId, key };
  }
  static connect(options) {
    return __async(this, null, function* () {
      const transport = (0, import_connect_node.createConnectTransport)({
        baseUrl: options.baseUrl ? options.baseUrl : "https://bag-client.hackclub.com",
        httpVersion: "1.1"
      });
      const client = (0, import_connect.createPromiseClient)(ElizaService, transport);
      if (!(yield client.verifyKey(options)))
        throw new Error("App not found or invalid key");
      return new _App2(client, options.appId, options.key);
    });
  }
  static format(obj) {
    for (let [entry, value] of Object.entries(obj)) {
      if (entry === "metadata") {
        obj[entry] = JSON.parse(value);
        if (typeof obj[entry] === "string")
          obj[entry] = JSON.parse(obj[entry]);
      } else if (value instanceof Object)
        obj[entry] = _App2.format(value);
    }
    return obj;
  }
  // I would do this with a cleaner for-loop, but I can't get it to be typed in TypeScript
  createApp(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.createApp(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  createInstances(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.createInstances(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  createInstance(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.createInstance(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  createItem(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.createItem(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  createRecipe(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.createRecipe(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  createTrade(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.createTrade(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  readIdentity(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.readIdentity(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  readInventory(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.readInventory(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  readItem(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.readItem(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  readInstance(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.readInstance(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  readApp() {
    return __async(this, arguments, function* (request = {}) {
      return _App2.format(
        yield this.client.readApp(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  readTrade(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.readTrade(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  readRecipe(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.readRecipe(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  updateIdentityMetadata(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.updateIdentityMetadata(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  updateInstance(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.updateInstance(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  updateItem(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.updateItem(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  updateApp(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.updateApp(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  updateTrade(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.updateTrade(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  updateRecipe(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.updateRecipe(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  deleteApp(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.deleteApp(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  deleteInstance(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.deleteInstance(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
  closeTrade(request) {
    return __async(this, null, function* () {
      return _App2.format(
        yield this.client.closeTrade(__spreadValues(__spreadValues({}, this.request), request))
      );
    });
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  App,
  Permissions
});
//# sourceMappingURL=index.js.map