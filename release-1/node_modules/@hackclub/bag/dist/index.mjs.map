{"version":3,"sources":["../../node_modules/dotenv/package.json","../../node_modules/dotenv/lib/main.js","../../node_modules/dotenv/lib/env-options.js","../../node_modules/dotenv/lib/cli-options.js","../gen/eliza_pb.ts","../gen/eliza_connect.ts","../src/index.ts","../../node_modules/dotenv/config.js"],"sourcesContent":["{\n  \"name\": \"dotenv\",\n  \"version\": \"16.3.1\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./lib/main.d.ts\",\n      \"require\": \"./lib/main.js\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"lint-readme\": \"standard-markdown\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap tests/*.js --100 -Rspec\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"funding\": \"https://github.com/motdotla/dotenv?sponsor=1\",\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@definitelytyped/dtslint\": \"^0.0.133\",\n    \"@types/node\": \"^18.11.3\",\n    \"decache\": \"^4.6.1\",\n    \"sinon\": \"^14.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"standard-markdown\": \"^7.1.0\",\n    \"standard-version\": \"^9.5.0\",\n    \"tap\": \"^16.3.0\",\n    \"tar\": \"^6.1.11\",\n    \"typescript\": \"^4.8.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"browser\": {\n    \"fs\": false\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    throw new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenv.org/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      throw new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development')\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    throw new Error('INVALID_DOTENV_KEY: Missing key part')\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    throw new Error('INVALID_DOTENV_KEY: Missing environment part')\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n\n  if (options && options.path && options.path.length > 0) {\n    dotenvPath = options.path\n  }\n\n  // Locate .env.vault\n  return dotenvPath.endsWith('.vault') ? dotenvPath : `${dotenvPath}.vault`\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    let processEnv = process.env\n    if (options && options.processEnv != null) {\n      processEnv = options.processEnv\n    }\n\n    DotenvModule.populate(processEnv, parsed, options)\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _debug(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  const vaultPath = _vaultPath(options)\n\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!fs.existsSync(vaultPath)) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.slice(0, 12)\n  const authTag = ciphertext.slice(-16)\n  ciphertext = ciphertext.slice(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const msg = 'INVALID_DOTENV_KEY: It must be 64 characters long (or more)'\n      throw new Error(msg)\n    } else if (decryptionFailed) {\n      const msg = 'DECRYPTION_FAILED: Please check your DOTENV_KEY'\n      throw new Error(msg)\n    } else {\n      console.error('Error: ', error.code)\n      console.error('Error: ', error.message)\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    throw new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n","// ../config.js accepts options via environment variables\nconst options = {}\n\nif (process.env.DOTENV_CONFIG_ENCODING != null) {\n  options.encoding = process.env.DOTENV_CONFIG_ENCODING\n}\n\nif (process.env.DOTENV_CONFIG_PATH != null) {\n  options.path = process.env.DOTENV_CONFIG_PATH\n}\n\nif (process.env.DOTENV_CONFIG_DEBUG != null) {\n  options.debug = process.env.DOTENV_CONFIG_DEBUG\n}\n\nif (process.env.DOTENV_CONFIG_OVERRIDE != null) {\n  options.override = process.env.DOTENV_CONFIG_OVERRIDE\n}\n\nif (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {\n  options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY\n}\n\nmodule.exports = options\n","const re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/\n\nmodule.exports = function optionMatcher (args) {\n  return args.reduce(function (acc, cur) {\n    const matches = cur.match(re)\n    if (matches) {\n      acc[matches[1]] = matches[2]\n    }\n    return acc\n  }, {})\n}\n","// @generated by protoc-gen-es v1.5.0 with parameter \"target=ts\"\n// @generated from file eliza.proto (package connectrpc.eliza.v1, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from message connectrpc.eliza.v1.App\n */\nexport class App extends Message<App> {\n  /**\n   * @generated from field: optional int32 id = 1;\n   */\n  id?: number;\n\n  /**\n   * @generated from field: optional string name = 2;\n   */\n  name?: string;\n\n  /**\n   * @generated from field: optional string description = 3;\n   */\n  description?: string;\n\n  /**\n   * @generated from field: optional string permissions = 4;\n   */\n  permissions?: string;\n\n  /**\n   * @generated from field: optional bool public = 5;\n   */\n  public?: boolean;\n\n  /**\n   * @generated from field: optional string metadata = 6;\n   */\n  metadata?: string;\n\n  constructor(data?: PartialMessage<App>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.App\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"description\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"permissions\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"public\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): App {\n    return new App().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): App {\n    return new App().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): App {\n    return new App().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: App | PlainMessage<App> | undefined, b: App | PlainMessage<App> | undefined): boolean {\n    return proto3.util.equals(App, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.Item\n */\nexport class Item extends Message<Item> {\n  /**\n   * @generated from field: optional string name = 1;\n   */\n  name?: string;\n\n  /**\n   * @generated from field: optional string image = 2;\n   */\n  image?: string;\n\n  /**\n   * @generated from field: optional string description = 3;\n   */\n  description?: string;\n\n  /**\n   * @generated from field: optional string reaction = 4;\n   */\n  reaction?: string;\n\n  /**\n   * @generated from field: optional bool commodity = 5;\n   */\n  commodity?: boolean;\n\n  /**\n   * @generated from field: optional bool tradable = 6;\n   */\n  tradable?: boolean;\n\n  /**\n   * @generated from field: optional bool public = 7;\n   */\n  public?: boolean;\n\n  /**\n   * @generated from field: optional string metadata = 8;\n   */\n  metadata?: string;\n\n  constructor(data?: PartialMessage<Item>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.Item\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"image\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"description\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"reaction\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"commodity\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"tradable\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 7, name: \"public\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 8, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Item {\n    return new Item().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Item {\n    return new Item().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Item {\n    return new Item().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Item | PlainMessage<Item> | undefined, b: Item | PlainMessage<Item> | undefined): boolean {\n    return proto3.util.equals(Item, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.Identity\n */\nexport class Identity extends Message<Identity> {\n  /**\n   * @generated from field: optional string slack = 1;\n   */\n  slack?: string;\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Instance inventory = 2;\n   */\n  inventory: Instance[] = [];\n\n  /**\n   * @generated from field: optional string metadata = 3;\n   */\n  metadata?: string;\n\n  constructor(data?: PartialMessage<Identity>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.Identity\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"slack\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"inventory\", kind: \"message\", T: Instance, repeated: true },\n    { no: 3, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Identity {\n    return new Identity().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Identity {\n    return new Identity().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Identity {\n    return new Identity().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Identity | PlainMessage<Identity> | undefined, b: Identity | PlainMessage<Identity> | undefined): boolean {\n    return proto3.util.equals(Identity, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.Instance\n */\nexport class Instance extends Message<Instance> {\n  /**\n   * @generated from field: optional int32 id = 1;\n   */\n  id?: number;\n\n  /**\n   * @generated from field: optional string itemId = 2;\n   */\n  itemId?: string;\n\n  /**\n   * @generated from field: optional string identityId = 3;\n   */\n  identityId?: string;\n\n  /**\n   * @generated from field: optional int32 quantity = 4;\n   */\n  quantity?: number;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Item item = 5;\n   */\n  item?: Item;\n\n  constructor(data?: PartialMessage<Instance>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.Instance\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"itemId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"identityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"quantity\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 5, name: \"item\", kind: \"message\", T: Item, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Instance {\n    return new Instance().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Instance {\n    return new Instance().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Instance {\n    return new Instance().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Instance | PlainMessage<Instance> | undefined, b: Instance | PlainMessage<Instance> | undefined): boolean {\n    return proto3.util.equals(Instance, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.Trade\n */\nexport class Trade extends Message<Trade> {\n  /**\n   * @generated from field: optional int32 id = 1;\n   */\n  id?: number;\n\n  /**\n   * @generated from field: optional string initiatorIdentityId = 2;\n   */\n  initiatorIdentityId?: string;\n\n  /**\n   * @generated from field: optional string receiverIdentityId = 3;\n   */\n  receiverIdentityId?: string;\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Instance initiatorTrades = 4;\n   */\n  initiatorTrades: Instance[] = [];\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Instance receiverTrades = 5;\n   */\n  receiverTrades: Instance[] = [];\n\n  /**\n   * @generated from field: optional bool public = 6;\n   */\n  public?: boolean;\n\n  /**\n   * @generated from field: optional bool closed = 7;\n   */\n  closed?: boolean;\n\n  constructor(data?: PartialMessage<Trade>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.Trade\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"initiatorIdentityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"receiverIdentityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"initiatorTrades\", kind: \"message\", T: Instance, repeated: true },\n    { no: 5, name: \"receiverTrades\", kind: \"message\", T: Instance, repeated: true },\n    { no: 6, name: \"public\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 7, name: \"closed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Trade {\n    return new Trade().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Trade {\n    return new Trade().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Trade {\n    return new Trade().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Trade | PlainMessage<Trade> | undefined, b: Trade | PlainMessage<Trade> | undefined): boolean {\n    return proto3.util.equals(Trade, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.Recipe\n */\nexport class Recipe extends Message<Recipe> {\n  /**\n   * @generated from field: int32 id = 1;\n   */\n  id = 0;\n\n  /**\n   * @generated from field: repeated string inputIds = 2;\n   */\n  inputIds: string[] = [];\n\n  /**\n   * @generated from field: repeated string outputIds = 3;\n   */\n  outputIds: string[] = [];\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Item inputs = 4;\n   */\n  inputs: Item[] = [];\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Item outputs = 5;\n   */\n  outputs: Item[] = [];\n\n  constructor(data?: PartialMessage<Recipe>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.Recipe\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"inputIds\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"outputIds\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"inputs\", kind: \"message\", T: Item, repeated: true },\n    { no: 5, name: \"outputs\", kind: \"message\", T: Item, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Recipe {\n    return new Recipe().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Recipe {\n    return new Recipe().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Recipe {\n    return new Recipe().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Recipe | PlainMessage<Recipe> | undefined, b: Recipe | PlainMessage<Recipe> | undefined): boolean {\n    return proto3.util.equals(Recipe, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateInstancesRequest\n */\nexport class CreateInstancesRequest extends Message<CreateInstancesRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Item items = 3;\n   */\n  items: Item[] = [];\n\n  /**\n   * @generated from field: string identityId = 4;\n   */\n  identityId = \"\";\n\n  /**\n   * @generated from field: optional string note = 5;\n   */\n  note?: string;\n\n  constructor(data?: PartialMessage<CreateInstancesRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateInstancesRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"items\", kind: \"message\", T: Item, repeated: true },\n    { no: 4, name: \"identityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"note\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateInstancesRequest {\n    return new CreateInstancesRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateInstancesRequest {\n    return new CreateInstancesRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateInstancesRequest {\n    return new CreateInstancesRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateInstancesRequest | PlainMessage<CreateInstancesRequest> | undefined, b: CreateInstancesRequest | PlainMessage<CreateInstancesRequest> | undefined): boolean {\n    return proto3.util.equals(CreateInstancesRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateInstancesResponse\n */\nexport class CreateInstancesResponse extends Message<CreateInstancesResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Instance instance = 2;\n   */\n  instance?: Instance;\n\n  constructor(data?: PartialMessage<CreateInstancesResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateInstancesResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"instance\", kind: \"message\", T: Instance, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateInstancesResponse {\n    return new CreateInstancesResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateInstancesResponse {\n    return new CreateInstancesResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateInstancesResponse {\n    return new CreateInstancesResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateInstancesResponse | PlainMessage<CreateInstancesResponse> | undefined, b: CreateInstancesResponse | PlainMessage<CreateInstancesResponse> | undefined): boolean {\n    return proto3.util.equals(CreateInstancesResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateInstanceRequest\n */\nexport class CreateInstanceRequest extends Message<CreateInstanceRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string itemId = 3;\n   */\n  itemId = \"\";\n\n  /**\n   * @generated from field: string identityId = 4;\n   */\n  identityId = \"\";\n\n  /**\n   * @generated from field: int32 quantity = 5;\n   */\n  quantity = 0;\n\n  /**\n   * @generated from field: optional string metadata = 6;\n   */\n  metadata?: string;\n\n  /**\n   * @generated from field: optional bool public = 7;\n   */\n  public?: boolean;\n\n  /**\n   * @generated from field: optional string note = 8;\n   */\n  note?: string;\n\n  constructor(data?: PartialMessage<CreateInstanceRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateInstanceRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"itemId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"identityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"quantity\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 6, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"public\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 8, name: \"note\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateInstanceRequest {\n    return new CreateInstanceRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateInstanceRequest {\n    return new CreateInstanceRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateInstanceRequest {\n    return new CreateInstanceRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateInstanceRequest | PlainMessage<CreateInstanceRequest> | undefined, b: CreateInstanceRequest | PlainMessage<CreateInstanceRequest> | undefined): boolean {\n    return proto3.util.equals(CreateInstanceRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateInstanceResponse\n */\nexport class CreateInstanceResponse extends Message<CreateInstanceResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Instance instance = 2;\n   */\n  instance?: Instance;\n\n  constructor(data?: PartialMessage<CreateInstanceResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateInstanceResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"instance\", kind: \"message\", T: Instance, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateInstanceResponse {\n    return new CreateInstanceResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateInstanceResponse {\n    return new CreateInstanceResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateInstanceResponse {\n    return new CreateInstanceResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateInstanceResponse | PlainMessage<CreateInstanceResponse> | undefined, b: CreateInstanceResponse | PlainMessage<CreateInstanceResponse> | undefined): boolean {\n    return proto3.util.equals(CreateInstanceResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateAppRequest\n */\nexport class CreateAppRequest extends Message<CreateAppRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string name = 3;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: optional string description = 4;\n   */\n  description?: string;\n\n  /**\n   * @generated from field: optional int32 permissions = 5;\n   */\n  permissions?: number;\n\n  /**\n   * @generated from field: optional bool public = 6;\n   */\n  public?: boolean;\n\n  /**\n   * @generated from field: optional string metadata = 7;\n   */\n  metadata?: string;\n\n  constructor(data?: PartialMessage<CreateAppRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateAppRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"description\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"permissions\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 6, name: \"public\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 7, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAppRequest {\n    return new CreateAppRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAppRequest {\n    return new CreateAppRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAppRequest {\n    return new CreateAppRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateAppRequest | PlainMessage<CreateAppRequest> | undefined, b: CreateAppRequest | PlainMessage<CreateAppRequest> | undefined): boolean {\n    return proto3.util.equals(CreateAppRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateAppResponse\n */\nexport class CreateAppResponse extends Message<CreateAppResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.App app = 2;\n   */\n  app?: App;\n\n  /**\n   * @generated from field: optional string key = 3;\n   */\n  key?: string;\n\n  constructor(data?: PartialMessage<CreateAppResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateAppResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"app\", kind: \"message\", T: App, opt: true },\n    { no: 3, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAppResponse {\n    return new CreateAppResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAppResponse {\n    return new CreateAppResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAppResponse {\n    return new CreateAppResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateAppResponse | PlainMessage<CreateAppResponse> | undefined, b: CreateAppResponse | PlainMessage<CreateAppResponse> | undefined): boolean {\n    return proto3.util.equals(CreateAppResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateItemRequest\n */\nexport class CreateItemRequest extends Message<CreateItemRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: connectrpc.eliza.v1.Item item = 3;\n   */\n  item?: Item;\n\n  constructor(data?: PartialMessage<CreateItemRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateItemRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"item\", kind: \"message\", T: Item },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateItemRequest {\n    return new CreateItemRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateItemRequest {\n    return new CreateItemRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateItemRequest {\n    return new CreateItemRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateItemRequest | PlainMessage<CreateItemRequest> | undefined, b: CreateItemRequest | PlainMessage<CreateItemRequest> | undefined): boolean {\n    return proto3.util.equals(CreateItemRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateItemResponse\n */\nexport class CreateItemResponse extends Message<CreateItemResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Item item = 2;\n   */\n  item?: Item;\n\n  constructor(data?: PartialMessage<CreateItemResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateItemResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"item\", kind: \"message\", T: Item, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateItemResponse {\n    return new CreateItemResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateItemResponse {\n    return new CreateItemResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateItemResponse {\n    return new CreateItemResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateItemResponse | PlainMessage<CreateItemResponse> | undefined, b: CreateItemResponse | PlainMessage<CreateItemResponse> | undefined): boolean {\n    return proto3.util.equals(CreateItemResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateRecipeRequest\n */\nexport class CreateRecipeRequest extends Message<CreateRecipeRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: repeated string inputs = 3;\n   */\n  inputs: string[] = [];\n\n  /**\n   * @generated from field: repeated string outputs = 4;\n   */\n  outputs: string[] = [];\n\n  constructor(data?: PartialMessage<CreateRecipeRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateRecipeRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"inputs\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"outputs\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRecipeRequest {\n    return new CreateRecipeRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRecipeRequest {\n    return new CreateRecipeRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRecipeRequest {\n    return new CreateRecipeRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateRecipeRequest | PlainMessage<CreateRecipeRequest> | undefined, b: CreateRecipeRequest | PlainMessage<CreateRecipeRequest> | undefined): boolean {\n    return proto3.util.equals(CreateRecipeRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateRecipeResponse\n */\nexport class CreateRecipeResponse extends Message<CreateRecipeResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Recipe recipe = 2;\n   */\n  recipe?: Recipe;\n\n  constructor(data?: PartialMessage<CreateRecipeResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateRecipeResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"recipe\", kind: \"message\", T: Recipe, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRecipeResponse {\n    return new CreateRecipeResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRecipeResponse {\n    return new CreateRecipeResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRecipeResponse {\n    return new CreateRecipeResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateRecipeResponse | PlainMessage<CreateRecipeResponse> | undefined, b: CreateRecipeResponse | PlainMessage<CreateRecipeResponse> | undefined): boolean {\n    return proto3.util.equals(CreateRecipeResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateTradeRequest\n */\nexport class CreateTradeRequest extends Message<CreateTradeRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string initiator = 3;\n   */\n  initiator = \"\";\n\n  /**\n   * @generated from field: string receiver = 4;\n   */\n  receiver = \"\";\n\n  /**\n   * @generated from field: optional bool public = 5;\n   */\n  public?: boolean;\n\n  constructor(data?: PartialMessage<CreateTradeRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateTradeRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"initiator\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"receiver\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"public\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTradeRequest {\n    return new CreateTradeRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTradeRequest {\n    return new CreateTradeRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTradeRequest {\n    return new CreateTradeRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateTradeRequest | PlainMessage<CreateTradeRequest> | undefined, b: CreateTradeRequest | PlainMessage<CreateTradeRequest> | undefined): boolean {\n    return proto3.util.equals(CreateTradeRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CreateTradeResponse\n */\nexport class CreateTradeResponse extends Message<CreateTradeResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Trade trade = 2;\n   */\n  trade?: Trade;\n\n  constructor(data?: PartialMessage<CreateTradeResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CreateTradeResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"trade\", kind: \"message\", T: Trade, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTradeResponse {\n    return new CreateTradeResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTradeResponse {\n    return new CreateTradeResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTradeResponse {\n    return new CreateTradeResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateTradeResponse | PlainMessage<CreateTradeResponse> | undefined, b: CreateTradeResponse | PlainMessage<CreateTradeResponse> | undefined): boolean {\n    return proto3.util.equals(CreateTradeResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadIdentityRequest\n */\nexport class ReadIdentityRequest extends Message<ReadIdentityRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string identityId = 3;\n   */\n  identityId = \"\";\n\n  constructor(data?: PartialMessage<ReadIdentityRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadIdentityRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"identityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadIdentityRequest {\n    return new ReadIdentityRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadIdentityRequest {\n    return new ReadIdentityRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadIdentityRequest {\n    return new ReadIdentityRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadIdentityRequest | PlainMessage<ReadIdentityRequest> | undefined, b: ReadIdentityRequest | PlainMessage<ReadIdentityRequest> | undefined): boolean {\n    return proto3.util.equals(ReadIdentityRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadIdentityResponse\n */\nexport class ReadIdentityResponse extends Message<ReadIdentityResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Identity identity = 2;\n   */\n  identity?: Identity;\n\n  constructor(data?: PartialMessage<ReadIdentityResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadIdentityResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"identity\", kind: \"message\", T: Identity, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadIdentityResponse {\n    return new ReadIdentityResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadIdentityResponse {\n    return new ReadIdentityResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadIdentityResponse {\n    return new ReadIdentityResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadIdentityResponse | PlainMessage<ReadIdentityResponse> | undefined, b: ReadIdentityResponse | PlainMessage<ReadIdentityResponse> | undefined): boolean {\n    return proto3.util.equals(ReadIdentityResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadInventoryRequest\n */\nexport class ReadInventoryRequest extends Message<ReadInventoryRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string identityId = 3;\n   */\n  identityId = \"\";\n\n  constructor(data?: PartialMessage<ReadInventoryRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadInventoryRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"identityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadInventoryRequest {\n    return new ReadInventoryRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadInventoryRequest {\n    return new ReadInventoryRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadInventoryRequest {\n    return new ReadInventoryRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadInventoryRequest | PlainMessage<ReadInventoryRequest> | undefined, b: ReadInventoryRequest | PlainMessage<ReadInventoryRequest> | undefined): boolean {\n    return proto3.util.equals(ReadInventoryRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadInventoryResponse\n */\nexport class ReadInventoryResponse extends Message<ReadInventoryResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Instance inventory = 2;\n   */\n  inventory: Instance[] = [];\n\n  constructor(data?: PartialMessage<ReadInventoryResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadInventoryResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"inventory\", kind: \"message\", T: Instance, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadInventoryResponse {\n    return new ReadInventoryResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadInventoryResponse {\n    return new ReadInventoryResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadInventoryResponse {\n    return new ReadInventoryResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadInventoryResponse | PlainMessage<ReadInventoryResponse> | undefined, b: ReadInventoryResponse | PlainMessage<ReadInventoryResponse> | undefined): boolean {\n    return proto3.util.equals(ReadInventoryResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadItemRequest\n */\nexport class ReadItemRequest extends Message<ReadItemRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string query = 3;\n   */\n  query = \"\";\n\n  constructor(data?: PartialMessage<ReadItemRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadItemRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"query\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadItemRequest {\n    return new ReadItemRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadItemRequest {\n    return new ReadItemRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadItemRequest {\n    return new ReadItemRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadItemRequest | PlainMessage<ReadItemRequest> | undefined, b: ReadItemRequest | PlainMessage<ReadItemRequest> | undefined): boolean {\n    return proto3.util.equals(ReadItemRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadItemResponse\n */\nexport class ReadItemResponse extends Message<ReadItemResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Item items = 2;\n   */\n  items: Item[] = [];\n\n  constructor(data?: PartialMessage<ReadItemResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadItemResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"items\", kind: \"message\", T: Item, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadItemResponse {\n    return new ReadItemResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadItemResponse {\n    return new ReadItemResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadItemResponse {\n    return new ReadItemResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadItemResponse | PlainMessage<ReadItemResponse> | undefined, b: ReadItemResponse | PlainMessage<ReadItemResponse> | undefined): boolean {\n    return proto3.util.equals(ReadItemResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadInstanceRequest\n */\nexport class ReadInstanceRequest extends Message<ReadInstanceRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 instanceId = 3;\n   */\n  instanceId = 0;\n\n  constructor(data?: PartialMessage<ReadInstanceRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadInstanceRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"instanceId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadInstanceRequest {\n    return new ReadInstanceRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadInstanceRequest {\n    return new ReadInstanceRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadInstanceRequest {\n    return new ReadInstanceRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadInstanceRequest | PlainMessage<ReadInstanceRequest> | undefined, b: ReadInstanceRequest | PlainMessage<ReadInstanceRequest> | undefined): boolean {\n    return proto3.util.equals(ReadInstanceRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadInstanceResponse\n */\nexport class ReadInstanceResponse extends Message<ReadInstanceResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Instance instance = 2;\n   */\n  instance?: Instance;\n\n  constructor(data?: PartialMessage<ReadInstanceResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadInstanceResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"instance\", kind: \"message\", T: Instance, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadInstanceResponse {\n    return new ReadInstanceResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadInstanceResponse {\n    return new ReadInstanceResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadInstanceResponse {\n    return new ReadInstanceResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadInstanceResponse | PlainMessage<ReadInstanceResponse> | undefined, b: ReadInstanceResponse | PlainMessage<ReadInstanceResponse> | undefined): boolean {\n    return proto3.util.equals(ReadInstanceResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadAppRequest\n */\nexport class ReadAppRequest extends Message<ReadAppRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 optAppId = 3;\n   */\n  optAppId = 0;\n\n  constructor(data?: PartialMessage<ReadAppRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadAppRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"optAppId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadAppRequest {\n    return new ReadAppRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadAppRequest {\n    return new ReadAppRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadAppRequest {\n    return new ReadAppRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadAppRequest | PlainMessage<ReadAppRequest> | undefined, b: ReadAppRequest | PlainMessage<ReadAppRequest> | undefined): boolean {\n    return proto3.util.equals(ReadAppRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadAppResponse\n */\nexport class ReadAppResponse extends Message<ReadAppResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.App app = 2;\n   */\n  app?: App;\n\n  constructor(data?: PartialMessage<ReadAppResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadAppResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"app\", kind: \"message\", T: App, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadAppResponse {\n    return new ReadAppResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadAppResponse {\n    return new ReadAppResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadAppResponse {\n    return new ReadAppResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadAppResponse | PlainMessage<ReadAppResponse> | undefined, b: ReadAppResponse | PlainMessage<ReadAppResponse> | undefined): boolean {\n    return proto3.util.equals(ReadAppResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadTradeRequest\n */\nexport class ReadTradeRequest extends Message<ReadTradeRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 tradeId = 3;\n   */\n  tradeId = 0;\n\n  constructor(data?: PartialMessage<ReadTradeRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadTradeRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"tradeId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadTradeRequest {\n    return new ReadTradeRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadTradeRequest {\n    return new ReadTradeRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadTradeRequest {\n    return new ReadTradeRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadTradeRequest | PlainMessage<ReadTradeRequest> | undefined, b: ReadTradeRequest | PlainMessage<ReadTradeRequest> | undefined): boolean {\n    return proto3.util.equals(ReadTradeRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadTradeResponse\n */\nexport class ReadTradeResponse extends Message<ReadTradeResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Trade trade = 2;\n   */\n  trade?: Trade;\n\n  constructor(data?: PartialMessage<ReadTradeResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadTradeResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"trade\", kind: \"message\", T: Trade, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadTradeResponse {\n    return new ReadTradeResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadTradeResponse {\n    return new ReadTradeResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadTradeResponse {\n    return new ReadTradeResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadTradeResponse | PlainMessage<ReadTradeResponse> | undefined, b: ReadTradeResponse | PlainMessage<ReadTradeResponse> | undefined): boolean {\n    return proto3.util.equals(ReadTradeResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadRecipeRequest\n */\nexport class ReadRecipeRequest extends Message<ReadRecipeRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 recipeId = 3;\n   */\n  recipeId = 0;\n\n  constructor(data?: PartialMessage<ReadRecipeRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadRecipeRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"recipeId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadRecipeRequest {\n    return new ReadRecipeRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadRecipeRequest {\n    return new ReadRecipeRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadRecipeRequest {\n    return new ReadRecipeRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadRecipeRequest | PlainMessage<ReadRecipeRequest> | undefined, b: ReadRecipeRequest | PlainMessage<ReadRecipeRequest> | undefined): boolean {\n    return proto3.util.equals(ReadRecipeRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.ReadRecipeResponse\n */\nexport class ReadRecipeResponse extends Message<ReadRecipeResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Recipe recipe = 2;\n   */\n  recipe?: Recipe;\n\n  constructor(data?: PartialMessage<ReadRecipeResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.ReadRecipeResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"recipe\", kind: \"message\", T: Recipe, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadRecipeResponse {\n    return new ReadRecipeResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadRecipeResponse {\n    return new ReadRecipeResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadRecipeResponse {\n    return new ReadRecipeResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReadRecipeResponse | PlainMessage<ReadRecipeResponse> | undefined, b: ReadRecipeResponse | PlainMessage<ReadRecipeResponse> | undefined): boolean {\n    return proto3.util.equals(ReadRecipeResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateIdentityMetadataRequest\n */\nexport class UpdateIdentityMetadataRequest extends Message<UpdateIdentityMetadataRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string identityId = 3;\n   */\n  identityId = \"\";\n\n  /**\n   * @generated from field: string metadata = 4;\n   */\n  metadata = \"\";\n\n  constructor(data?: PartialMessage<UpdateIdentityMetadataRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateIdentityMetadataRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"identityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIdentityMetadataRequest {\n    return new UpdateIdentityMetadataRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIdentityMetadataRequest {\n    return new UpdateIdentityMetadataRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIdentityMetadataRequest {\n    return new UpdateIdentityMetadataRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateIdentityMetadataRequest | PlainMessage<UpdateIdentityMetadataRequest> | undefined, b: UpdateIdentityMetadataRequest | PlainMessage<UpdateIdentityMetadataRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateIdentityMetadataRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateIdentityMetadataResponse\n */\nexport class UpdateIdentityMetadataResponse extends Message<UpdateIdentityMetadataResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Identity identity = 2;\n   */\n  identity?: Identity;\n\n  constructor(data?: PartialMessage<UpdateIdentityMetadataResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateIdentityMetadataResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"identity\", kind: \"message\", T: Identity, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIdentityMetadataResponse {\n    return new UpdateIdentityMetadataResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIdentityMetadataResponse {\n    return new UpdateIdentityMetadataResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIdentityMetadataResponse {\n    return new UpdateIdentityMetadataResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateIdentityMetadataResponse | PlainMessage<UpdateIdentityMetadataResponse> | undefined, b: UpdateIdentityMetadataResponse | PlainMessage<UpdateIdentityMetadataResponse> | undefined): boolean {\n    return proto3.util.equals(UpdateIdentityMetadataResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateInstanceRequest\n */\nexport class UpdateInstanceRequest extends Message<UpdateInstanceRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 instanceId = 3;\n   */\n  instanceId = 0;\n\n  /**\n   * @generated from field: connectrpc.eliza.v1.Instance new = 4;\n   */\n  new?: Instance;\n\n  /**\n   * @generated from field: optional string note = 5;\n   */\n  note?: string;\n\n  constructor(data?: PartialMessage<UpdateInstanceRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateInstanceRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"instanceId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"new\", kind: \"message\", T: Instance },\n    { no: 5, name: \"note\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateInstanceRequest {\n    return new UpdateInstanceRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateInstanceRequest {\n    return new UpdateInstanceRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateInstanceRequest {\n    return new UpdateInstanceRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateInstanceRequest | PlainMessage<UpdateInstanceRequest> | undefined, b: UpdateInstanceRequest | PlainMessage<UpdateInstanceRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateInstanceRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateInstanceResponse\n */\nexport class UpdateInstanceResponse extends Message<UpdateInstanceResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Instance instance = 2;\n   */\n  instance?: Instance;\n\n  constructor(data?: PartialMessage<UpdateInstanceResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateInstanceResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"instance\", kind: \"message\", T: Instance, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateInstanceResponse {\n    return new UpdateInstanceResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateInstanceResponse {\n    return new UpdateInstanceResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateInstanceResponse {\n    return new UpdateInstanceResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateInstanceResponse | PlainMessage<UpdateInstanceResponse> | undefined, b: UpdateInstanceResponse | PlainMessage<UpdateInstanceResponse> | undefined): boolean {\n    return proto3.util.equals(UpdateInstanceResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateItemRequest\n */\nexport class UpdateItemRequest extends Message<UpdateItemRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string itemId = 3;\n   */\n  itemId = \"\";\n\n  /**\n   * @generated from field: connectrpc.eliza.v1.Item new = 4;\n   */\n  new?: Item;\n\n  constructor(data?: PartialMessage<UpdateItemRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateItemRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"itemId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"new\", kind: \"message\", T: Item },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateItemRequest {\n    return new UpdateItemRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateItemRequest {\n    return new UpdateItemRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateItemRequest {\n    return new UpdateItemRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateItemRequest | PlainMessage<UpdateItemRequest> | undefined, b: UpdateItemRequest | PlainMessage<UpdateItemRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateItemRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateItemResponse\n */\nexport class UpdateItemResponse extends Message<UpdateItemResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Item item = 2;\n   */\n  item?: Item;\n\n  constructor(data?: PartialMessage<UpdateItemResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateItemResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"item\", kind: \"message\", T: Item, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateItemResponse {\n    return new UpdateItemResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateItemResponse {\n    return new UpdateItemResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateItemResponse {\n    return new UpdateItemResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateItemResponse | PlainMessage<UpdateItemResponse> | undefined, b: UpdateItemResponse | PlainMessage<UpdateItemResponse> | undefined): boolean {\n    return proto3.util.equals(UpdateItemResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateAppRequest\n */\nexport class UpdateAppRequest extends Message<UpdateAppRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: optional int32 optAppId = 3;\n   */\n  optAppId?: number;\n\n  /**\n   * @generated from field: connectrpc.eliza.v1.App new = 4;\n   */\n  new?: App;\n\n  constructor(data?: PartialMessage<UpdateAppRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateAppRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"optAppId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"new\", kind: \"message\", T: App },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppRequest {\n    return new UpdateAppRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppRequest {\n    return new UpdateAppRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppRequest {\n    return new UpdateAppRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateAppRequest | PlainMessage<UpdateAppRequest> | undefined, b: UpdateAppRequest | PlainMessage<UpdateAppRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateAppRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateAppResponse\n */\nexport class UpdateAppResponse extends Message<UpdateAppResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.App app = 2;\n   */\n  app?: App;\n\n  constructor(data?: PartialMessage<UpdateAppResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateAppResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"app\", kind: \"message\", T: App, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppResponse {\n    return new UpdateAppResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppResponse {\n    return new UpdateAppResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppResponse {\n    return new UpdateAppResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateAppResponse | PlainMessage<UpdateAppResponse> | undefined, b: UpdateAppResponse | PlainMessage<UpdateAppResponse> | undefined): boolean {\n    return proto3.util.equals(UpdateAppResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateTradeRequest\n */\nexport class UpdateTradeRequest extends Message<UpdateTradeRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 tradeId = 3;\n   */\n  tradeId = 0;\n\n  /**\n   * @generated from field: string identityId = 4;\n   */\n  identityId = \"\";\n\n  /**\n   * @generated from field: repeated connectrpc.eliza.v1.Instance add = 5;\n   */\n  add: Instance[] = [];\n\n  constructor(data?: PartialMessage<UpdateTradeRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateTradeRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"tradeId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"identityId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"add\", kind: \"message\", T: Instance, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTradeRequest {\n    return new UpdateTradeRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTradeRequest {\n    return new UpdateTradeRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTradeRequest {\n    return new UpdateTradeRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateTradeRequest | PlainMessage<UpdateTradeRequest> | undefined, b: UpdateTradeRequest | PlainMessage<UpdateTradeRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateTradeRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateTradeResponse\n */\nexport class UpdateTradeResponse extends Message<UpdateTradeResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Trade trade = 2;\n   */\n  trade?: Trade;\n\n  constructor(data?: PartialMessage<UpdateTradeResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateTradeResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"trade\", kind: \"message\", T: Trade, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTradeResponse {\n    return new UpdateTradeResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTradeResponse {\n    return new UpdateTradeResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTradeResponse {\n    return new UpdateTradeResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateTradeResponse | PlainMessage<UpdateTradeResponse> | undefined, b: UpdateTradeResponse | PlainMessage<UpdateTradeResponse> | undefined): boolean {\n    return proto3.util.equals(UpdateTradeResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateRecipeRequest\n */\nexport class UpdateRecipeRequest extends Message<UpdateRecipeRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: string recipeId = 3;\n   */\n  recipeId = \"\";\n\n  /**\n   * @generated from field: connectrpc.eliza.v1.Recipe new = 4;\n   */\n  new?: Recipe;\n\n  constructor(data?: PartialMessage<UpdateRecipeRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateRecipeRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"recipeId\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"new\", kind: \"message\", T: Recipe },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRecipeRequest {\n    return new UpdateRecipeRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRecipeRequest {\n    return new UpdateRecipeRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRecipeRequest {\n    return new UpdateRecipeRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateRecipeRequest | PlainMessage<UpdateRecipeRequest> | undefined, b: UpdateRecipeRequest | PlainMessage<UpdateRecipeRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateRecipeRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.UpdateRecipeResponse\n */\nexport class UpdateRecipeResponse extends Message<UpdateRecipeResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Recipe recipe = 2;\n   */\n  recipe?: Recipe;\n\n  constructor(data?: PartialMessage<UpdateRecipeResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.UpdateRecipeResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"recipe\", kind: \"message\", T: Recipe, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRecipeResponse {\n    return new UpdateRecipeResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRecipeResponse {\n    return new UpdateRecipeResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRecipeResponse {\n    return new UpdateRecipeResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateRecipeResponse | PlainMessage<UpdateRecipeResponse> | undefined, b: UpdateRecipeResponse | PlainMessage<UpdateRecipeResponse> | undefined): boolean {\n    return proto3.util.equals(UpdateRecipeResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.DeleteAppRequest\n */\nexport class DeleteAppRequest extends Message<DeleteAppRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 deleteAppId = 3;\n   */\n  deleteAppId = 0;\n\n  constructor(data?: PartialMessage<DeleteAppRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.DeleteAppRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"deleteAppId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAppRequest {\n    return new DeleteAppRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAppRequest {\n    return new DeleteAppRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAppRequest {\n    return new DeleteAppRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteAppRequest | PlainMessage<DeleteAppRequest> | undefined, b: DeleteAppRequest | PlainMessage<DeleteAppRequest> | undefined): boolean {\n    return proto3.util.equals(DeleteAppRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.DeleteAppResponse\n */\nexport class DeleteAppResponse extends Message<DeleteAppResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.App deletedApp = 2;\n   */\n  deletedApp?: App;\n\n  constructor(data?: PartialMessage<DeleteAppResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.DeleteAppResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"deletedApp\", kind: \"message\", T: App, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAppResponse {\n    return new DeleteAppResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAppResponse {\n    return new DeleteAppResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAppResponse {\n    return new DeleteAppResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteAppResponse | PlainMessage<DeleteAppResponse> | undefined, b: DeleteAppResponse | PlainMessage<DeleteAppResponse> | undefined): boolean {\n    return proto3.util.equals(DeleteAppResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.DeleteInstanceRequest\n */\nexport class DeleteInstanceRequest extends Message<DeleteInstanceRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 instanceId = 3;\n   */\n  instanceId = 0;\n\n  constructor(data?: PartialMessage<DeleteInstanceRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.DeleteInstanceRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"instanceId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteInstanceRequest {\n    return new DeleteInstanceRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteInstanceRequest {\n    return new DeleteInstanceRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteInstanceRequest {\n    return new DeleteInstanceRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteInstanceRequest | PlainMessage<DeleteInstanceRequest> | undefined, b: DeleteInstanceRequest | PlainMessage<DeleteInstanceRequest> | undefined): boolean {\n    return proto3.util.equals(DeleteInstanceRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.DeleteInstanceResponse\n */\nexport class DeleteInstanceResponse extends Message<DeleteInstanceResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Instance deletedInstance = 2;\n   */\n  deletedInstance?: Instance;\n\n  constructor(data?: PartialMessage<DeleteInstanceResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.DeleteInstanceResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"deletedInstance\", kind: \"message\", T: Instance, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteInstanceResponse {\n    return new DeleteInstanceResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteInstanceResponse {\n    return new DeleteInstanceResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteInstanceResponse {\n    return new DeleteInstanceResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteInstanceResponse | PlainMessage<DeleteInstanceResponse> | undefined, b: DeleteInstanceResponse | PlainMessage<DeleteInstanceResponse> | undefined): boolean {\n    return proto3.util.equals(DeleteInstanceResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CloseTradeRequest\n */\nexport class CloseTradeRequest extends Message<CloseTradeRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  /**\n   * @generated from field: int32 tradeId = 3;\n   */\n  tradeId = 0;\n\n  constructor(data?: PartialMessage<CloseTradeRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CloseTradeRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"tradeId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CloseTradeRequest {\n    return new CloseTradeRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CloseTradeRequest {\n    return new CloseTradeRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CloseTradeRequest {\n    return new CloseTradeRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CloseTradeRequest | PlainMessage<CloseTradeRequest> | undefined, b: CloseTradeRequest | PlainMessage<CloseTradeRequest> | undefined): boolean {\n    return proto3.util.equals(CloseTradeRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.CloseTradeResponse\n */\nexport class CloseTradeResponse extends Message<CloseTradeResponse> {\n  /**\n   * @generated from field: optional string response = 1;\n   */\n  response?: string;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Trade trade = 2;\n   */\n  trade?: Trade;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Identity initiator = 3;\n   */\n  initiator?: Identity;\n\n  /**\n   * @generated from field: optional connectrpc.eliza.v1.Identity receiver = 4;\n   */\n  receiver?: Identity;\n\n  constructor(data?: PartialMessage<CloseTradeResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.CloseTradeResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"response\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"trade\", kind: \"message\", T: Trade, opt: true },\n    { no: 3, name: \"initiator\", kind: \"message\", T: Identity, opt: true },\n    { no: 4, name: \"receiver\", kind: \"message\", T: Identity, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CloseTradeResponse {\n    return new CloseTradeResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CloseTradeResponse {\n    return new CloseTradeResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CloseTradeResponse {\n    return new CloseTradeResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CloseTradeResponse | PlainMessage<CloseTradeResponse> | undefined, b: CloseTradeResponse | PlainMessage<CloseTradeResponse> | undefined): boolean {\n    return proto3.util.equals(CloseTradeResponse, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.VerifyKeyRequest\n */\nexport class VerifyKeyRequest extends Message<VerifyKeyRequest> {\n  /**\n   * @generated from field: int32 appId = 1;\n   */\n  appId = 0;\n\n  /**\n   * @generated from field: string key = 2;\n   */\n  key = \"\";\n\n  constructor(data?: PartialMessage<VerifyKeyRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.VerifyKeyRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"appId\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyKeyRequest {\n    return new VerifyKeyRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyKeyRequest {\n    return new VerifyKeyRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyKeyRequest {\n    return new VerifyKeyRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VerifyKeyRequest | PlainMessage<VerifyKeyRequest> | undefined, b: VerifyKeyRequest | PlainMessage<VerifyKeyRequest> | undefined): boolean {\n    return proto3.util.equals(VerifyKeyRequest, a, b);\n  }\n}\n\n/**\n * @generated from message connectrpc.eliza.v1.VerifyKeyResponse\n */\nexport class VerifyKeyResponse extends Message<VerifyKeyResponse> {\n  /**\n   * @generated from field: bool valid = 1;\n   */\n  valid = false;\n\n  constructor(data?: PartialMessage<VerifyKeyResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"connectrpc.eliza.v1.VerifyKeyResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"valid\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyKeyResponse {\n    return new VerifyKeyResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyKeyResponse {\n    return new VerifyKeyResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyKeyResponse {\n    return new VerifyKeyResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VerifyKeyResponse | PlainMessage<VerifyKeyResponse> | undefined, b: VerifyKeyResponse | PlainMessage<VerifyKeyResponse> | undefined): boolean {\n    return proto3.util.equals(VerifyKeyResponse, a, b);\n  }\n}\n\n","// @generated by protoc-gen-connect-es v1.1.4 with parameter \"target=ts\"\n// @generated from file eliza.proto (package connectrpc.eliza.v1, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { CloseTradeRequest, CloseTradeResponse, CreateAppRequest, CreateAppResponse, CreateInstanceRequest, CreateInstanceResponse, CreateInstancesRequest, CreateInstancesResponse, CreateItemRequest, CreateItemResponse, CreateRecipeRequest, CreateRecipeResponse, CreateTradeRequest, CreateTradeResponse, DeleteAppRequest, DeleteAppResponse, DeleteInstanceRequest, DeleteInstanceResponse, ReadAppRequest, ReadAppResponse, ReadIdentityRequest, ReadIdentityResponse, ReadInstanceRequest, ReadInstanceResponse, ReadInventoryRequest, ReadInventoryResponse, ReadItemRequest, ReadItemResponse, ReadRecipeRequest, ReadRecipeResponse, ReadTradeRequest, ReadTradeResponse, UpdateAppRequest, UpdateAppResponse, UpdateIdentityMetadataRequest, UpdateIdentityMetadataResponse, UpdateInstanceRequest, UpdateInstanceResponse, UpdateItemRequest, UpdateItemResponse, UpdateRecipeRequest, UpdateRecipeResponse, UpdateTradeRequest, UpdateTradeResponse, VerifyKeyRequest, VerifyKeyResponse } from \"./eliza_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from service connectrpc.eliza.v1.ElizaService\n */\nexport const ElizaService = {\n  typeName: \"connectrpc.eliza.v1.ElizaService\",\n  methods: {\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateApp\n     */\n    createApp: {\n      name: \"CreateApp\",\n      I: CreateAppRequest,\n      O: CreateAppResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateInstances\n     */\n    createInstances: {\n      name: \"CreateInstances\",\n      I: CreateInstancesRequest,\n      O: CreateInstancesResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateInstance\n     */\n    createInstance: {\n      name: \"CreateInstance\",\n      I: CreateInstanceRequest,\n      O: CreateInstanceResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateItem\n     */\n    createItem: {\n      name: \"CreateItem\",\n      I: CreateItemRequest,\n      O: CreateItemResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateRecipe\n     */\n    createRecipe: {\n      name: \"CreateRecipe\",\n      I: CreateRecipeRequest,\n      O: CreateRecipeResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.CreateTrade\n     */\n    createTrade: {\n      name: \"CreateTrade\",\n      I: CreateTradeRequest,\n      O: CreateTradeResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadIdentity\n     */\n    readIdentity: {\n      name: \"ReadIdentity\",\n      I: ReadIdentityRequest,\n      O: ReadIdentityResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadInventory\n     */\n    readInventory: {\n      name: \"ReadInventory\",\n      I: ReadInventoryRequest,\n      O: ReadInventoryResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadItem\n     */\n    readItem: {\n      name: \"ReadItem\",\n      I: ReadItemRequest,\n      O: ReadItemResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadInstance\n     */\n    readInstance: {\n      name: \"ReadInstance\",\n      I: ReadInstanceRequest,\n      O: ReadInstanceResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadApp\n     */\n    readApp: {\n      name: \"ReadApp\",\n      I: ReadAppRequest,\n      O: ReadAppResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadTrade\n     */\n    readTrade: {\n      name: \"ReadTrade\",\n      I: ReadTradeRequest,\n      O: ReadTradeResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.ReadRecipe\n     */\n    readRecipe: {\n      name: \"ReadRecipe\",\n      I: ReadRecipeRequest,\n      O: ReadRecipeResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateIdentityMetadata\n     */\n    updateIdentityMetadata: {\n      name: \"UpdateIdentityMetadata\",\n      I: UpdateIdentityMetadataRequest,\n      O: UpdateIdentityMetadataResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateInstance\n     */\n    updateInstance: {\n      name: \"UpdateInstance\",\n      I: UpdateInstanceRequest,\n      O: UpdateInstanceResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateItem\n     */\n    updateItem: {\n      name: \"UpdateItem\",\n      I: UpdateItemRequest,\n      O: UpdateItemResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateApp\n     */\n    updateApp: {\n      name: \"UpdateApp\",\n      I: UpdateAppRequest,\n      O: UpdateAppResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateTrade\n     */\n    updateTrade: {\n      name: \"UpdateTrade\",\n      I: UpdateTradeRequest,\n      O: UpdateTradeResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.UpdateRecipe\n     */\n    updateRecipe: {\n      name: \"UpdateRecipe\",\n      I: UpdateRecipeRequest,\n      O: UpdateRecipeResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.DeleteApp\n     */\n    deleteApp: {\n      name: \"DeleteApp\",\n      I: DeleteAppRequest,\n      O: DeleteAppResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.DeleteInstance\n     */\n    deleteInstance: {\n      name: \"DeleteInstance\",\n      I: DeleteInstanceRequest,\n      O: DeleteInstanceResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.CloseTrade\n     */\n    closeTrade: {\n      name: \"CloseTrade\",\n      I: CloseTradeRequest,\n      O: CloseTradeResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc connectrpc.eliza.v1.ElizaService.VerifyKey\n     */\n    verifyKey: {\n      name: \"VerifyKey\",\n      I: VerifyKeyRequest,\n      O: VerifyKeyResponse,\n      kind: MethodKind.Unary,\n    },\n  }\n} as const;\n\n","import { ElizaService } from '../gen/eliza_connect'\nimport * as methods from '../gen/eliza_pb'\nimport { PromiseClient, createPromiseClient } from '@connectrpc/connect'\nimport { createConnectTransport } from '@connectrpc/connect-node'\nimport 'dotenv/config'\n\ntype RecursivePartial<T> = {\n  [P in keyof T]?: T[P] extends (infer U)[]\n    ? RecursivePartial<U>[]\n    : T[P] extends object | undefined\n      ? RecursivePartial<T[P]>\n      : T[P]\n}\n\nexport const Permissions = {\n  ADMIN: 4,\n  WRITE: 3,\n  WRITE_SPECIFIC: 2,\n  READ_PRIVATE: 1,\n  READ: 0\n}\n\nexport class App {\n  private client: PromiseClient<typeof ElizaService>\n  private request: { appId: number; key: string }\n\n  constructor(\n    client: PromiseClient<typeof ElizaService>,\n    appId: number,\n    key: string\n  ) {\n    this.client = client\n    this.request = { appId, key }\n  }\n\n  static async connect(options: {\n    appId: number\n    key: string\n    baseUrl?: string\n  }) {\n    const transport = createConnectTransport({\n      baseUrl: options.baseUrl\n        ? options.baseUrl\n        : 'https://bag-client.hackclub.com',\n      httpVersion: '1.1'\n    })\n\n    const client = createPromiseClient(ElizaService, transport)\n    if (!(await client.verifyKey(options)))\n      throw new Error('App not found or invalid key')\n    return new App(client, options.appId, options.key)\n  }\n\n  static format(obj: any) {\n    // Format: convert metadata to JSON, etc.\n    for (let [entry, value] of Object.entries(obj)) {\n      if (entry === 'metadata') {\n        obj[entry] = JSON.parse(value as string)\n        if (typeof obj[entry] === 'string')\n          obj[entry] = JSON.parse(obj[entry] as string)\n      } else if (value instanceof Object) obj[entry] = App.format(value)\n    }\n    return obj\n  }\n\n  // I would do this with a cleaner for-loop, but I can't get it to be typed in TypeScript\n  async createApp(request: RecursivePartial<methods.CreateAppRequest>) {\n    return App.format(\n      await this.client.createApp({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async createInstances(\n    request: RecursivePartial<methods.CreateInstancesRequest>\n  ) {\n    return App.format(\n      await this.client.createInstances({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async createInstance(\n    request: RecursivePartial<methods.CreateInstanceRequest>\n  ) {\n    return App.format(\n      await this.client.createInstance({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async createItem(request: RecursivePartial<methods.CreateItemRequest>) {\n    return App.format(\n      await this.client.createItem({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async createRecipe(request: RecursivePartial<methods.CreateRecipeRequest>) {\n    return App.format(\n      await this.client.createRecipe({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async createTrade(request: RecursivePartial<methods.CreateTradeRequest>) {\n    return App.format(\n      await this.client.createTrade({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async readIdentity(request: RecursivePartial<methods.ReadIdentityRequest>) {\n    return App.format(\n      await this.client.readIdentity({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async readInventory(request: RecursivePartial<methods.ReadInventoryRequest>) {\n    return App.format(\n      await this.client.readInventory({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async readItem(request: RecursivePartial<methods.ReadItemRequest>) {\n    return App.format(\n      await this.client.readItem({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async readInstance(request: RecursivePartial<methods.ReadInstanceRequest>) {\n    return App.format(\n      await this.client.readInstance({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async readApp(request: RecursivePartial<methods.ReadAppRequest> = {}) {\n    return App.format(\n      await this.client.readApp({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async readTrade(request: RecursivePartial<methods.ReadTradeRequest>) {\n    return App.format(\n      await this.client.readTrade({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async readRecipe(request: RecursivePartial<methods.ReadRecipeRequest>) {\n    return App.format(\n      await this.client.readRecipe({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async updateIdentityMetadata(\n    request: RecursivePartial<methods.UpdateIdentityMetadataRequest>\n  ) {\n    return App.format(\n      await this.client.updateIdentityMetadata({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async updateInstance(\n    request: RecursivePartial<methods.UpdateInstanceRequest>\n  ) {\n    return App.format(\n      await this.client.updateInstance({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async updateItem(request: RecursivePartial<methods.UpdateItemRequest>) {\n    return App.format(\n      await this.client.updateItem({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async updateApp(request: RecursivePartial<methods.UpdateAppRequest>) {\n    return App.format(\n      await this.client.updateApp({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async updateTrade(request: RecursivePartial<methods.UpdateTradeRequest>) {\n    return App.format(\n      await this.client.updateTrade({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async updateRecipe(request: RecursivePartial<methods.UpdateRecipeRequest>) {\n    return App.format(\n      await this.client.updateRecipe({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async deleteApp(request: RecursivePartial<methods.DeleteAppRequest>) {\n    return App.format(\n      await this.client.deleteApp({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async deleteInstance(\n    request: RecursivePartial<methods.DeleteInstanceRequest>\n  ) {\n    return App.format(\n      await this.client.deleteInstance({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n\n  async closeTrade(request: RecursivePartial<methods.CloseTradeRequest>) {\n    return App.format(\n      await this.client.closeTrade({\n        ...this.request,\n        ...request\n      })\n    )\n  }\n}\n","(function () {\n  require('./lib/main').config(\n    Object.assign(\n      {},\n      require('./lib/env-options'),\n      require('./lib/cli-options')(process.argv)\n    )\n  )\n})()\n"],"mappings":"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","names":["App","_App"]}